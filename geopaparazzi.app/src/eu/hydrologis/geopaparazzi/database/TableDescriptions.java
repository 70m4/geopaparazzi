/*
 * Geopaparazzi - Digital field mapping on Android based devices
 * Copyright (C) 2010  HydroloGIS (www.hydrologis.com)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package eu.hydrologis.geopaparazzi.database;

/**
 * Enumerations containing the database fields.
 *
 * @author Andrea Antonello (www.hydrologis.com)
 */
public class TableDescriptions {

    /**
     * The notes table name.
     */
    public static final String TABLE_NOTES = "notes";
    /**
     * Image table name.
     */
    public static final String TABLE_IMAGES = "images";
    /**
     * Image data table name.
     */
    public static final String TABLE_IMAGE_DATA = "imagedata";


    public static enum NotesTableFields {
        /**
         * id of the note, Generated by the db.
         */
        COLUMN_ID_LONG("_id"),
        /**
         * Longitude of the note in WGS84.
         */
        COLUMN_LON_DOUBLE("lon"),
        /**
         * Latitude of the note in WGS84.
         */
        COLUMN_LAT_DOUBLE("lat"),
        /**
         * Elevation of the note.
         */
        COLUMN_ALTIM_DOUBLE("altim"),
        /**
         * Timestamp of the note.
         */
        COLUMN_TS_LONG("ts"),
        /**
         * Description of the note.
         */
        COLUMN_DESCRIPTION_STRING("description"),
        /**
         * Simple text of the note.
         */
        COLUMN_TEXT_STRING("text"),
        /**
         * Form data of the note.
         */
        COLUMN_FORM_STRING("form"),
        /**
         * Is dirty field (0 = false, 1 = true)
         */
        COLUMN_ISDIRTY_INT("isdirty"),
        /**
         * Style of the note.
         */
        COLUMN_STYLE_STRING("style");

        private String fieldName;

        NotesTableFields(String fieldName) {
            this.fieldName = fieldName;
        }

        public String getFieldName() {
            return fieldName;
        }
    }

    public static enum ImageTableFields {
        /**
         * id of the note, Generated by the db.
         */
        COLUMN_ID_LONG("_id"),
        /**
         * Longitude of the note in WGS84.
         */
        COLUMN_LON_DOUBLE("lon"),
        /**
         * Latitude of the note in WGS84.
         */
        COLUMN_LAT_DOUBLE("lat"),
        /**
         * Elevation of the note.
         */
        COLUMN_ALTIM_DOUBLE("altim"),
        /**
         * Timestamp of the note.
         */
        COLUMN_TS_LONG("ts"),
        /**
         * The azimuth of the picture.
         */
        COLUMN_AZIM_DOUBLE("azim"),
        /**
         * A name or text for the image.
         */
        COLUMN_TEXT_STRING("text"),
        /**
         * Is dirty field (0=false, 1=true)
         */
        COLUMN_ISDIRTY_INT("isdirty"),
        /**
         * An optional note id, to which it is bound to.
         */
        COLUMN_NOTE_ID_LONG("note_id"),
        /**
         * The id of the connected image data.
         */
        COLUMN_IMAGE_ID_LONG("image_id");

        private String fieldName;

        ImageTableFields(String fieldName) {
            this.fieldName = fieldName;
        }

        public String getFieldName() {
            return fieldName;
        }
    }

    public static enum ImageDataTableFields {
        /**
         * id of the note, Generated by the db.
         */
        COLUMN_ID_LONG("_id"),
        /**
         * The image data.
         */
        COLUMN_IMAGE_BLOB("image");

        private String fieldName;

        ImageDataTableFields(String fieldName) {
            this.fieldName = fieldName;
        }

        public String getFieldName() {
            return fieldName;
        }
    }
}
