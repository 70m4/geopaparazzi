import com.android.build.gradle.tasks.PackageApplication
apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'hydrologis'
            storeFile file('/home/hydrologis/Dropbox/hydrologis/configurations/key_hydrologis/hydrologis.keystore')
        }
    }
    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    defaultConfig {
        applicationId "eu.hydrologis.geopaparazzi"
        minSdkVersion 23
        targetSdkVersion 23
        versionCode 73
        versionName "5.0.0"
        signingConfig signingConfigs.config
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    sourceSets {
        main {
//            manifest {
//                srcFile 'AndroidManifest.xml'
//            }
//            java {
//                srcDir 'src'
//            }
//            res {
//                srcDir 'res'
//            }
//            assets {
//                srcDir 'assets'
//            }
//            resources {
//                srcDir 'src'
//            }
//            aidl {
//                srcDir 'src'
//            }
            jniLibs.srcDir new File(buildDir, 'native-libs')
        }
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:preference-v7:23.1.1'
    compile project(':geopaparazzilibrary')
    compile project(':geopaparazzispatialitelibrary')
    compile project(':geopaparazzimapsforge')
}

task copyNativeLibs(type: Copy) {
    from(new File(project(':geopaparazzispatialitelibrary').projectDir, 'jniLibs')) {
        include 'armeabi/libjsqlite.so'
        include 'armeabi-v7a/libjsqlite.so'
        include 'x86/libjsqlite.so'
    }
    into new File(buildDir, 'native-libs')
}
tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn copyNativeLibs }
clean.dependsOn 'cleanCopyNativeLibs'


